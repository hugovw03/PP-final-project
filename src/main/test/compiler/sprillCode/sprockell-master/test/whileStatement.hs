import Sprockell

prog :: [Instruction]
prog = [ 
       Load (ImmValue 10) regA, 
       Push regA, 
       Pop regA, 
       Store regA (DirAddr 0), 
       Load (ImmValue 20) regA, 
       Push regA, 
       Pop regA, 
       Store regA (DirAddr 1), 
       Load (DirAddr 0) regA, 
       Push regA, 
       Load (DirAddr 1) regA, 
       Push regA, 
       Pop regB, 
       Pop regA, 
       Compute Add regA regB regA, 
       Push regA, 
       Pop regC, 
       Load (ImmValue 25) regA, 
       Push regA, 
       Pop regD, 
       Push regC, 
       Push regD, 
       Pop regB, 
       Pop regA, 
       Compute Gt regA regB regA, 
       Push regA, 
       Pop regA,
       Compute Equal reg0 regA regA,
       Branch regA (Rel 24),
        Load (DirAddr 0) regA, 
       Push regA, 
       Load (ImmValue 1) regA, 
       Push regA, 
       Pop regB, 
       Pop regA, 
       Compute Sub regA regB regA, 
       Push regA, 
       Pop regA, 
       Store regA (DirAddr 0), 
       Push regA, 
       Load (DirAddr 1) regA, 
       Push regA, 
       Load (ImmValue 1) regA, 
       Push regA, 
       Pop regB, 
       Pop regA, 
       Compute Sub regA regB regA, 
       Push regA, 
       Pop regA, 
       Store regA (DirAddr 1), 
       Push regA, 
       Jump (Rel (-45)),
       EndProg
       ]

main = runWithDebugger (debuggerSimplePrint myShow) [prog]